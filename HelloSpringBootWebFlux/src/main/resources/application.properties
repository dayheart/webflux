spring.application.name=HelloSpringBootWebFlux

server.port=${port:8282}

#server.servlet.context-path=/ctx_path

###spring.thymeleaf.cache=false
###spring.thymeleaf.enabled=true
###spring.thymeleaf.prefix=classpath:/templates/
###spring.thymeleaf.suffix=.html

#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//10.10.52.4:1521/FREE
#spring.datasource.username=dayheart
#spring.datasource.password=dayheart


spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@//192.168.5.130:1521/FREE
spring.datasource.username=exem
spring.datasource.password=1.ex-em.com


#spring.jpa.database=oracle
#spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

#logging.level.org.hibernate=debug
#logging.level.org.hibernate.type=trace
# TEST
#spring.jpa.properties.hibernate.dialect=

#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:bootapp;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.passwrd=

# com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.dayheart.hello.jpa.Product$HibernateProxy$AH3O3xLj["hibernateLazyInitializer"])
#{
#    "mfrId": "REI",
#    "description": "Ratchet Link",
#    "price": 79.0,
#    "qtyOnHand": 210,
#    "prodcutId": "2A45C",
#    "hibernateLazyInitializer": {} <= this one
#}
spring.jackson.serialization.fail-on-empty-beans=false


server.error.path=/error
